
var $container;
var pageInitialized = false;
var sizeRangeSuffixes = {
  'lt100':'',
  'lt240':'',
  'lt320':'',
  'lt500':'',
  'lt640':'',
  'lt1024':''
};

$(document).ready(function() {
  if (pageInitialized) {
    return;
  }
  pageInitialized = true;

  $('.justified-gallery').justifiedGallery({
    sizeRangeSuffixes: sizeRangeSuffixes
  });

  $("abbr.timeago").timeago();
});

var getAvatar = function (user) {
  var avatar = 'https://s3.amazonaws.com/simplifeed/placeholder.png';
  if (user.profileThumb && user.profileThumb !== '') {
    avatar = user.profileThumb;
  }
  return avatar;
};

$(document).ready(function() {
  $('.media-toolbar').on('click', '.like', function(e) {
    var likeButton = this;
    var postId = $(this).closest('.media').data('post-id');

    $.ajax({
        url: '/posts/' + postId + '/like',
        type: 'POST',
        success: function(data) {
          if (data && data.success) {
            $(likeButton).removeClass('like')
              .addClass('unlike');
            $(likeButton).find('.glyphicon')
              .removeClass('glyphicon-heart-empty')
              .addClass('glyphicon-heart');
            var count = Number($(likeButton).closest('.media-toolbar').find('.badge-likes').text());
            $(likeButton).closest('.media-toolbar').find('.badge-likes').html(count + 1);
          }
        }
    });
  });

  $('.media-toolbar').on('click', '.unlike', function(e) {
    var likeButton = this;
    var postId = $(this).closest('.media').data('post-id');

    $.ajax({
        url: '/posts/' + postId + '/unlike',
        type: 'POST',
        success: function(data) {
          if (data && data.success) {
            $(likeButton).removeClass('unlike')
              .addClass('like');
            $(likeButton).find('.glyphicon')
              .removeClass('glyphicon-heart')
              .addClass('glyphicon-heart-empty');
            var count = Number($(likeButton).closest('.media-toolbar').find('.badge-likes').text());
            $(likeButton).closest('.media-toolbar').find('.badge-likes').html(count - 1);
          }
        }
    });
  });
});

var jqXHR;
var activeUploads = 0;
var currentUpload = 1;

$(document).ready(function() {
    $container = $('#post-uploads');
    $container.masonry({
      "gutter": 10,
      "columnWidth": 300
    });
    // layout Masonry again after all images have loaded
    $container.imagesLoaded( function() {
      $container.masonry({
        "gutter": 10,
        "columnWidth": 300
      });
    });

    jqXHR = $('#post-fileupload').fileupload({
        dataType: 'json',
        change: function (e, data) {
          activeUploads += data.files.length;
          $('#progress').show();
          $('body').append('<div id="imagelightbox-overlay"></div>');
        },
        drop: function (e, data) {
          activeUploads += data.files.length;
          $('#progress').show();
          $('body').append('<div id="imagelightbox-overlay"></div>');
        },
        done: function (e, data) {
          $.each(data.result.files, function (index, file) {
            var html = new EJS({url: '/js/templates/upload.ejs'}).render(file);

            html = $.parseHTML(html);

            $container.append($(html));
            imagesLoaded( document.querySelector('#post-uploads'), function( instance ) {
              $container.masonry('appended', $(html));
            });

            if (currentUpload++ === activeUploads) {
              $('#progress').hide();
              $('#imagelightbox-overlay').remove();
              activeUploads = 0;
              currentUpload = 1;
            }
          });
        }
    });

    $("body").on("dragover", function(event) {

      // Do something to UI to make page look droppable
      $('.upload-item').addClass('dragging');

      // Required for drop to work
      return false;
    });

    $("body").on("dragleave", function(event) {

      // Remove UI change
      $('.upload-item').removeClass('dragging');
    });

    $('#post-fileupload').bind('fileuploadprogress', function (e, data) {
      // Log the current bitrate for this upload:
      console.log(data);
    });

    $('#profile-fileupload').fileupload({
        dataType: 'json',
        change: function (e, data) {
          $('body').append('<div id="imagelightbox-overlay"><div id="profile-progress" class="csspinner traditional"></div></div>');
        },
        done: function (e, data) {
          $('#imagelightbox-overlay').remove();
          $.each(data.result.files, function (index, file) {
            var html = new EJS({url: '/js/templates/profile-photo.ejs'}).render(file);
            $('#profile-photo').html(html);
          });
        }
    });

    $('body').on('click', '.btn-remove-upload', function(e) {
      e.preventDefault();
      var upload = this;
      var action = $(this).data('action');

      $.ajax({
          url: action,
          type: 'DELETE',
          success: function(data) {
            if (data && data.success) {
              $(upload).closest('.upload').remove();
              $container.masonry();
            }
          }
      });
      return false;
    });

    $('body').on('click', '.btn-remove-profile-photo', function(e) {
      e.preventDefault();
      var upload = this;
      var action = $(this).data('action');

      var defaultPhoto = '<img src="https://s3.amazonaws.com/simplifeed/placeholder.png" alt="profile photo">';
      defaultPhoto += '<input type="hidden" name="profileFile" value="" />';

      $.ajax({
          url: action,
          type: 'DELETE',
          success: function(data) {
            if (data && data.success) {
              $(upload).closest('.upload').remove();
              $('#profile-photo').html();
            }
          }
      });
      return false;
    });
});

$(document).ready(function() {
  $.getJSON( "/notifications.json", function(data) {
    var notifications = '';
    var unreadCount = 0;

    if (data.notifications && data.notifications.length > 0) {
      $.each(data.notifications, function(key, notification) {
        var unreadClass = '';
        if (!notification.read) {
          unreadClass = 'unread';
          unreadCount++;
        }

        notifications += new EJS({url: '/js/templates/notification.ejs'}).render({notification: notification, unread: unreadClass});
      });
      $('#notifications').append(notifications);

      if (unreadCount > 0) {
        $('#notification-count').html(unreadCount);
        $('#notification-count').addClass('unread');
      }
    } else {
      $('#notifications').append('<li id="empty-notification"><a href="#">Nothing to see here.</a></li>');
    }
  });

  $('#notifications').on('click', 'li a', function() {
    notification = this;
    if ($(notification).closest('li').hasClass('unread')) {
      $.ajax({
          url: '/notifications/' + $(notification).data('id') + '/read',
          type: 'PUT',
          success: function(result) {
            if (result.success) {
              $(location).attr('href', $(notification).data('href'));
            }
          }
      });
    } else {
      $(location).attr('href', $(notification).data('href'));
    }
  });
});

$(document).ready(function(){
  $('.comments').on('click', '.add-comment', function(e) {
    var commentButton = this;
    var postId = $(commentButton).closest('.media').data('post-id');
    var content = $(commentButton).closest('.comments').find('.comment-input').val();

    if (content && content !== '') {
      $.ajax({
          url: '/posts/' + postId + '/comment',
          type: 'POST',
          data: 'content=' + content,
          success: function(data) {
            if (data && data.success) {
              var html = new EJS({url: '/js/templates/comment.ejs'}).render({
                comment: data.comment,
                user: data.user,
                avatar: data.avatar
              });
              $(commentButton).closest('.comments').find('.comment-list').append(html);
              var count = Number($(commentButton).closest('.media').find('.comment-count').text());
              $(commentButton).closest('.media').find('.comment-count').html(count + 1);
              $(commentButton).closest('.comments').find('.comment-input').val('');
            }
          }
      });
    }
  });

  $('.comments').on('click', '.edit-comment', function(e) {
    var editButton = this;
    var commentBody = $(editButton).closest('.media-body');
    var content = commentBody.find('p.lead').text();
    commentBody.find('p.lead').hide();
    commentBody.find('.edit-comment').hide();

    var html = new EJS({url: '/js/templates/edit-comment.ejs'}).render();
    commentBody.append(html);

    commentBody.find('.comment-input').val(content);
  });

  $('.comments').on('click', '.cancel-comment', function(e) {
    var cancelButton = this;
    var commentBody = $(cancelButton).closest('.media-body');
    commentBody.find('.edit-comment').show();
    commentBody.find('p.lead').show();
    commentBody.find('.edit-comment-container').remove();
  });

  $('.comments').on('click', '.update-comment', function(e) {
    var updateButton = this;
    var commentId = $(updateButton).closest('.comment').data('comment-id');
    var content = $(updateButton).closest('.media').find('.comment-input').val();
    $.ajax({
        url: '/comments/' + commentId,
        type: 'PUT',
        data: 'content=' + content,
        success: function(data) {
          if (data && data.success) {
            var commentBody = $(updateButton).closest('.media-body');
            commentBody.find('.edit-comment').show();
            commentBody.find('p.lead').text(content);
            commentBody.find('p.lead').show();
            commentBody.find('.edit-comment-container').remove();
          }
        }
    });
  });

  $('.comments').on('click', '.delete-comment', function(e) {
    var deleteButton = this;
    var commentId = $(deleteButton).closest('.comment').data('comment-id');
    $.ajax({
        url: '/comments/' + commentId,
        type: 'DELETE',
        success: function(data) {
          if (data && data.success) {
            var commentBody = $(deleteButton).closest('.media-body');
            commentBody.closest('.comment').remove();
          }
        }
    });
  });
});

var curImages = new Array();

var activityIndicatorOn = function() {
  $( '<div id="imagelightbox-loading"><div class="csspinner traditional"></div></div>' ).appendTo( 'body' );
};
var activityIndicatorOff = function() {
  $( '#imagelightbox-loading' ).remove();
};
var overlayOn = function() {
  $('#imagelightbox-overlay').remove();
  $('<div id="imagelightbox-overlay"></div>').appendTo('body');
};
var overlayOff = function() {
  $('#imagelightbox-overlay').remove();
};
var captionOn = function() {
  var description = $( 'a[href="' + $( '#imagelightbox' ).attr( 'src' ) + '"] img' ).attr( 'title' );
  if (description && description.length > 0) {
    $( '<div id="imagelightbox-caption">' + description + '</div>' ).appendTo( 'body' );
  }
};
var captionOff = function() {
  $( '#imagelightbox-caption' ).remove();
};

$(document).ready(function() {
  $('a.lightbox').imageLightbox({
    onLoadStart: function() {
      overlayOn();
      captionOff();
      activityIndicatorOn();
    },
    onLoadEnd: function() {
      captionOn();
      activityIndicatorOff();
    },
    onEnd: function() {
      overlayOff();
      captionOff();
    }
  });

  $(document).keyup(function(e) {
    if (e.keyCode == 27) {
      $('#imagelightbox-overlay').remove();
      $('#imagelightbox').remove();
      $('#progress').remove();

      if (jqXHR) {
        activeUploads = 0;
        jqXHR.abort();
      }
    }
  });
});

$(document).ready(function() {
  $('#post-form textarea').liveUrl({
    loadStart : function(){
        $('.liveurl-loader').show();
    },
    loadEnd : function(){
        $('.liveurl-loader').hide();
    },
    success : function(data)
    {
        var output = $('.liveurl');
        output.find('.title').text(data.title);
        output.find('.description').text(data.description);
        output.find('.url').text(data.url);
        output.find('.image').empty();

        output.find('.close').one('click', function()
        {
            var liveUrl     = $(this).parent();
            liveUrl.hide('fast');
            liveUrl.find('.video').html('').hide();
            liveUrl.find('.image').html('');
            liveUrl.find('.controls .prev').addClass('inactive');
            liveUrl.find('.controls .next').addClass('inactive');
            liveUrl.find('.thumbnail').hide();
            liveUrl.find('.image').hide();

            $('textarea').trigger('clear');
            curImages = new Array();
        });

        output.show('fast');

        if (data.video != null) {
            var ratioW        = data.video.width  /350;
            data.video.width  = 350;
            data.video.height = data.video.height / ratioW;

            var video =
            '<object width="' + data.video.width  + '" height="' + data.video.height  + '">' +
                '<param name="movie"' +
                      'value="' + data.video.file  + '"></param>' +
                '<param name="allowScriptAccess" value="always"></param>' +
                '<embed src="' + data.video.file  + '"' +
                      'type="application/x-shockwave-flash"' +
                      'allowscriptaccess="always"' +
                      'width="' + data.video.width  + '" height="' + data.video.height  + '"></embed>' +
            '</object>';
            output.find('.video').html(video).show();


        }
    },
    addImage : function(image)
    {
        var output  = $('.liveurl');
        var jqImage = $(image);
        jqImage.attr('alt', 'Preview');

        if ((image.width / image.height)  > 7
        ||  (image.height / image.width)  > 4 ) {
            // we dont want extra large images...
            return false;
        }

        curImages.push(jqImage.attr('src'));
        output.find('.image').append(jqImage);


        if (curImages.length == 1) {
            // first image...

            output.find('.thumbnail .current').text('1');
            output.find('.thumbnail').show();
            output.find('.image').show();
            jqImage.addClass('active');

        }

        if (curImages.length == 2) {
            output.find('.controls .next').removeClass('inactive');
        }

        output.find('.thumbnail .max').text(curImages.length);
    }
});


$('.liveurl ').on('click', '.controls .button', function() {
    var self        = $(this);
    var liveUrl     = $(this).parents('.liveurl');
    var content     = liveUrl.find('.image');
    var images      = $('img', content);
    var activeImage = $('img.active', content);

    if (self.hasClass('next'))
         var elem = activeImage.next("img");
    else var elem = activeImage.prev("img");

    if (elem.length > 0) {
        activeImage.removeClass('active');
        elem.addClass('active');
        liveUrl.find('.thumbnail .current').text(elem.index() +1);

        if (elem.index() +1 == images.length || elem.index()+1 == 1) {
            self.addClass('inactive');
        }
    }

    if (self.hasClass('next'))
         var other = elem.prev("img");
    else var other = elem.next("img");

    if (other.length > 0) {
        if (self.hasClass('next'))
               self.prev().removeClass('inactive');
        else   self.next().removeClass('inactive');
   } else {
        if (self.hasClass('next'))
               self.prev().addClass('inactive');
        else   self.next().addClass('inactive');
   }
 });
});
